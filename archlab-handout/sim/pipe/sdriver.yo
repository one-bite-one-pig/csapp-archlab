                            | #######################################################################
                            | # Test for copying block of size 4;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f43004000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f20400000000000000 | 	irmovq $4, %rdx		# src and dst have 4 elements
0x014: 30f68803000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f75003000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | ##################################################################
0x032: c0f2f8ffffffffffffff | 		iaddq $-8, %rdx
0x03c: 72b401000000000000   | 		jl remain
                            | 
                            | 
0x045:                      | loop:
0x045: 50870000000000000000 | 		mrmovq (%rdi), %r8
0x04f: 50970800000000000000 | 		mrmovq 8(%rdi), %r9
0x059: 50a71000000000000000 | 		mrmovq 16(%rdi), %r10
0x063: 50b71800000000000000 | 		mrmovq 24(%rdi), %r11
0x06d: 50c72000000000000000 | 		mrmovq 32(%rdi), %r12
0x077: 50d72800000000000000 | 		mrmovq 40(%rdi), %r13
0x081: 50e73000000000000000 | 		mrmovq 48(%rdi), %r14
0x08b: 50173800000000000000 | 		mrmovq 56(%rdi), %rcx
0x095:                      | comp1:		
0x095: 6288                 | 		andq %r8,%r8
0x097: 40860000000000000000 | 		rmmovq %r8, (%rsi)
0x0a1: 71b400000000000000   | 		jle comp2
0x0aa: c0f00100000000000000 | 		iaddq $1, %rax
                            | 		
0x0b4:                      | comp2:		
0x0b4: 6299                 | 		andq %r9,%r9
0x0b6: 40960800000000000000 | 		rmmovq %r9, 8(%rsi)
0x0c0: 71d300000000000000   | 		jle comp3
0x0c9: c0f00100000000000000 | 		iaddq $1, %rax
                            | 		
0x0d3:                      | comp3:		
0x0d3: 62aa                 | 		andq %r10,%r10
0x0d5: 40a61000000000000000 | 		rmmovq %r10, 16(%rsi)
0x0df: 71f200000000000000   | 		jle comp4
0x0e8: c0f00100000000000000 | 		iaddq $1, %rax
0x0f2:                      | comp4:		
0x0f2: 62bb                 | 		andq %r11,%r11
0x0f4: 40b61800000000000000 | 		rmmovq %r11, 24(%rsi)
0x0fe: 711101000000000000   | 		jle comp5
0x107: c0f00100000000000000 | 		iaddq $1, %rax
                            | 		
0x111:                      | comp5:		
0x111: 62cc                 | 		andq %r12,%r12
0x113: 40c62000000000000000 | 		rmmovq %r12, 32(%rsi)
0x11d: 713001000000000000   | 		jle comp6
0x126: c0f00100000000000000 | 		iaddq $1, %rax
                            | 		
0x130:                      | comp6:		
0x130: 62dd                 | 		andq %r13,%r13
0x132: 40d62800000000000000 | 		rmmovq %r13, $40(%rsi)
0x13c: 714f01000000000000   | 		jle comp7
0x145: c0f00100000000000000 | 		iaddq $1, %rax
                            | 
0x14f:                      | comp7:		
0x14f: 62ee                 | 		andq %r14,%r14
0x151: 40e63000000000000000 | 		rmmovq %r14, 48(%rsi)
0x15b: 716e01000000000000   | 		jle comp8
0x164: c0f00100000000000000 | 		iaddq $1, %rax
                            | 		
                            | 		
0x16e:                      | comp8:		
0x16e: 6211                 | 		andq %rcx,%rcx
0x170: 40163800000000000000 | 		rmmovq %rcx, 56(%rsi)
0x17a: 718d01000000000000   | 		jle test
0x183: c0f00100000000000000 | 		iaddq $1, %rax
                            | 		
                            | 		
0x18d:                      | test:		
0x18d: c0f74000000000000000 | 		iaddq $64,%rdi
0x197: c0f64000000000000000 | 		iaddq $64,%rsi
0x1a1: c0f2f8ffffffffffffff | 		iaddq $-8, %rdx
0x1ab: 754500000000000000   | 		jge loop
                            | 		
0x1b4:                      | remain:        
                            | 		
                            | 		
0x1b4: c0f20400000000000000 | 	       iaddq $4, %rdx
0x1be: 6222                 |                andq %rdx,%rdx
0x1c0: 728b02000000000000   | 	       jl remain2
0x1c9: c0f2fcffffffffffffff | 	       iaddq $-4, %rdx
                            | 	       
                            | 
                            | 		
                            | 		
                            | 		
                            | 	
                            | 		
                            | 	
                            | 		
                            | 		
                            | 		
                            |        
                            | 	       
                            | 	       
                            | 	     
                            | 	       
                            | 	       
0x1d3: 50870000000000000000 | handle_4:      mrmovq (%rdi), %r8
0x1dd: 50970800000000000000 | 		mrmovq 8(%rdi), %r9
0x1e7: 50a71000000000000000 | 		mrmovq 16(%rdi), %r10
0x1f1: 50b71800000000000000 | 		mrmovq 24(%rdi), %r11
                            | 		
                            | 		
                            | 		
0x1fb:                      | c41:
0x1fb: 6288                 | 	       andq %r8,%r8
0x1fd: 40860000000000000000 | 	       rmmovq %r8,(%rsi)
0x207: 711a02000000000000   | 	       jle c42
0x210: c0f00100000000000000 | 	       iaddq $1, %rax
                            | 	       
                            | 	       
0x21a:                      | c42:
0x21a: 6299                 | 	       andq %r9,%r9
0x21c: 40960800000000000000 | 	       rmmovq %r9,8(%rsi)
0x226: 713902000000000000   | 	       jle c43
0x22f: c0f00100000000000000 | 	       iaddq $1, %rax
                            | 	       
0x239:                      | c43:
0x239: 62aa                 | 	       andq %r10,%r10
0x23b: 40a61000000000000000 | 	       rmmovq %r10,16(%rsi)
0x245: 715802000000000000   | 	       jle c44
0x24e: c0f00100000000000000 | 	       iaddq $1, %rax	       
                            | 	       
0x258:                      | c44:
0x258: 62bb                 | 	       andq %r11,%r11
0x25a: 40b61800000000000000 | 	       rmmovq %r11,24(%rsi)
0x264: 717702000000000000   | 	       jle end_4
0x26d: c0f00100000000000000 | 	       iaddq $1, %rax	   
                            | 	     
0x277:                      | end_4:
0x277: c0f72000000000000000 | 		iaddq $32,%rdi
0x281: c0f62000000000000000 | 		iaddq $32,%rsi
                            | 		
                            | 
                            | 		
0x28b:                      | remain2:
0x28b: c0f20200000000000000 | 		iaddq $2,%rdx
0x295: 6222                 | 		andq %rdx,%rdx
0x297: 721003000000000000   | 		jl remain3
0x2a0: c0f2feffffffffffffff | 		iaddq $-2,%rdx
                            | 		
                            | 		
                            | 		
0x2aa:                      | handle_2:
0x2aa: 50870000000000000000 | 		mrmovq (%rdi), %r8
0x2b4: 50970800000000000000 | 		mrmovq 8(%rdi), %r9
                            | 		
0x2be:                      | c21:
0x2be: 6288                 | 	       andq %r8,%r8
0x2c0: 40860000000000000000 | 	       rmmovq %r8,(%rsi)
0x2ca: 71dd02000000000000   | 	       jle c22
0x2d3: c0f00100000000000000 | 	       iaddq $1, %rax
                            | 		    
0x2dd:                      | c22:
0x2dd: 6299                 | 	       andq %r9,%r9
0x2df: 40960800000000000000 | 	       rmmovq %r9,8(%rsi)
0x2e9: 71fc02000000000000   | 	       jle end_2
0x2f2: c0f00100000000000000 | 	       iaddq $1, %rax	       
                            | 	       
0x2fc:                      | end_2:
0x2fc: c0f71000000000000000 | 		iaddq $16, %rdi
0x306: c0f61000000000000000 | 		iaddq  $16, %rsi
                            | 		
                            | 
0x310:                      | remain3:
0x310: c0f20100000000000000 |                iaddq $1,%rdx
0x31a: 6222                 | 		andq %rdx,%rdx
0x31c: 724e03000000000000   | 		jl Done
                            | 		
0x325:                      | handle_1:	
0x325: 50870000000000000000 | 		mrmovq(%rdi),%r8
0x32f: 6288                 | 		andq %r8,%r8
0x331: 40860000000000000000 | 		rmmovq %r8,(%rsi)
0x33b: 714e03000000000000   | 		jle Done
0x344: c0f00100000000000000 | 		iaddq $1,%rax
                            | 		
                            | 	       
                            | 	 
                            | 		
                            | 		
                            | 	
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x34e:                      | Done:
0x34e: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x34f:                      | End:
                            | #/* $end ncopy-ys */
0x34f:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x350:                      | 	.align 8
0x350:                      | src:
0x350: ffffffffffffffff     | 	.quad -1
0x358: feffffffffffffff     | 	.quad -2
0x360: 0300000000000000     | 	.quad 3
0x368: 0400000000000000     | 	.quad 4
0x370: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x380:                      | 	.align 16
0x380:                      | Predest:
0x380: fadebc0000000000     | 	.quad 0xbcdefa
0x388:                      | dest:
0x388: abefcd0000000000     | 	.quad 0xcdefab
0x390: abefcd0000000000     | 	.quad 0xcdefab
0x398: abefcd0000000000     | 	.quad 0xcdefab
0x3a0: abefcd0000000000     | 	.quad 0xcdefab
0x3a8:                      | Postdest:
0x3a8: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x3b0:                      | .align 8
                            | # Run time stack
0x3b0: 0000000000000000     | 	.quad 0
0x3b8: 0000000000000000     | 	.quad 0
0x3c0: 0000000000000000     | 	.quad 0
0x3c8: 0000000000000000     | 	.quad 0
0x3d0: 0000000000000000     | 	.quad 0
0x3d8: 0000000000000000     | 	.quad 0
0x3e0: 0000000000000000     | 	.quad 0
0x3e8: 0000000000000000     | 	.quad 0
0x3f0: 0000000000000000     | 	.quad 0
0x3f8: 0000000000000000     | 	.quad 0
0x400: 0000000000000000     | 	.quad 0
0x408: 0000000000000000     | 	.quad 0
0x410: 0000000000000000     | 	.quad 0
0x418: 0000000000000000     | 	.quad 0
0x420: 0000000000000000     | 	.quad 0
0x428: 0000000000000000     | 	.quad 0
                            | 
0x430:                      | Stack:
